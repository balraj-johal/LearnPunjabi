/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { lerp } from "../../../utils/math";

const RIVER_END_Y = 0.01;

let Punjab3 = React.forwardRef(({ ...props }, ref) => {
    const group = useRef();
    const river1 = useRef();
    const river2 = useRef();
    const { nodes, materials } = useGLTF('/Punjab3-transformed.glb');
    
    let [hovering, setHovering] = useState(false);
    let [stuck, setStuck] = useState(false);

    let alpha;

    useFrame(({ clock }) => {
        // rotate based on scroll
        group.current.rotation.y = -ref.current / 500 - (clock.getElapsedTime() * 0.1);
        // river1.current.position.y = -ref.current / 1500;
        alpha = Math.min(1, (ref.current - 1000) / 1000);
        console.log(alpha);
        let lerpedPos = lerp(RIVER_END_Y + 1.0, RIVER_END_Y, alpha);
        // console.log(lerpedPos);
        river1.current.position.y = lerpedPos;
        // if (hovering) group.current.rotation.x += 10;
    });

    /** keep hover behaviour going for a certain amount of time onClick.
     * @name stickHoverOnClick
     */
    let stickHoverOnClick = () => {
        setHovering(true);
        setStuck(true);
        setTimeout(() => {
            setHovering(false);
            setStuck(false);
        }, 2000);
    }
    let handlePointerLeave = e => {
        if (!stuck) setHovering(false);
    }

    return (
        <group 
            ref={group} 
            {...props} 
            dispose={null}
            onClick={ e => stickHoverOnClick() }
            onPointerEnter={ e => setHovering(true) }
            onPointerLeave={ e => handlePointerLeave(e) }
        >
            <mesh 
                geometry={nodes.Map_rivers001.geometry} 
                material={materials['Map_rivers.001']} 
            />
            <mesh 
                ref={river1} 
                geometry={nodes.River1.geometry} 
                material={nodes.River1.material} 
                position={[0, -0.01, 0]} 
                rotation={[0, 0.66, 0]} 
                scale={0.57} 
            />
            <mesh 
                ref={river2} 
                geometry={nodes.River2.geometry} 
                material={nodes.River2.material} 
                position={[0, -0.01, 0]} 
                rotation={[0, -0.75, 0]}
                scale={0.57} 
            />
        </group>
    )
})

export default Punjab3;

useGLTF.preload('/Punjab3-transformed.glb')
