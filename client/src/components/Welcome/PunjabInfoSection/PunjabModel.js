/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

let PunjabModel2 = (props) => {
    const group = useRef();
    const oldPunjab = useRef();
    const newPunjab = useRef();
    const pakPunjab = useRef();

    const { nodes, materials } = useGLTF('/Punjab8-transformed.glb')

    let [hovering, setHovering] = useState(false);
    let [stuck, setStuck] = useState(false);
    let [oldPunjabOpacity, setOldPunjabOpacity] = useState(0);

    useFrame(() => {
        if (props.scrollProgress > 0 && props.scrollProgress <= 1) {
            // fade in
            setOldPunjabOpacity(props.scrollProgress);
            group.current.position.y = 
                0.4 +  props.scrollProgress / 10;
        } else if (props.scrollProgress > 1 && props.scrollProgress <= 2) {
            // show rivers
            setOldPunjabOpacity(1);
        } else if (props.scrollProgress > 2 && props.scrollProgress <= 3) {
            // partition
            setOldPunjabOpacity(1);
            pakPunjab.current.position.x = 
                -0.125 * (props.scrollProgress - 2);
            newPunjab.current.position.x = 
                0.125 * (props.scrollProgress - 2);
            oldPunjab.current.position.x = 
                0.125 * (props.scrollProgress - 2);
        } else if (props.scrollProgress > 3 && props.scrollProgress <= 4) {
            // split of states (decrease old east punjab opacity)
            oldPunjab.current.position.x = 
                0.125 + 0.10 * (props.scrollProgress - 3);
            setOldPunjabOpacity(1 - (props.scrollProgress - 3) / 3);
        } else if (props.scrollProgress > 4 && props.scrollProgress <= 5) {
            // ?
        }

    });

    /** keep hover behaviour going for a certain amount of time onClick.
     * @name stickHoverOnClick
     */
    let stickHoverOnClick = () => {
        setHovering(true);
        setStuck(true);
        setTimeout(() => {
            setHovering(false);
            setStuck(false);
        }, 2000);
    }
    let handlePointerLeave = e => {
        if (!stuck) setHovering(false);
    }

    return (
        <group 
            ref={group} 
            {...props} 
            dispose={null}
            onClick={e => stickHoverOnClick()}
            onPointerEnter={e => setHovering(true)}
            onPointerLeave={e => handlePointerLeave(e)}
            position={[0, 0.5, 0]}
        > 
            <mesh 
                ref={pakPunjab}
                geometry={nodes['pakPunjab_-_Decimated_Low'].geometry} 
                material={materials.pakPunjab}
                material-transparent={true}
                material-opacity={props.scrollProgress}
            />
            <mesh 
                ref={oldPunjab}
                geometry={nodes['oldPunjab_-_Decimated_Low'].geometry} 
                material={materials.OldPunjab}
                material-transparent={true}
                material-opacity={oldPunjabOpacity}
            />
            <mesh 
                ref={newPunjab}
                geometry={nodes['newPunjab_-_Decimated_Low'].geometry} 
                material={materials.newPunjab}
                material-transparent={true}
                material-opacity={props.scrollProgress}
            />
        </group>
    )
}

export default PunjabModel2;

useGLTF.preload('/Punjab8-transformed.glb');
